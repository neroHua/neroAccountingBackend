<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.nero.hua.dao.TagDAO">

  <resultMap id="BaseResultMap" type="com.nero.hua.bean.TagDO">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="create_user_id" jdbcType="BIGINT" property="createUserId" />
    <result column="update_user_id" jdbcType="BIGINT" property="updateUserId" />
    <result column="code" jdbcType="VARCHAR" property="code" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="description" jdbcType="VARCHAR" property="description" />
    <result column="parent_id" jdbcType="BIGINT" property="parentId" />
  </resultMap>

  <sql id="Base_Column_List">
    id, create_time, update_time, create_user_id, update_user_id, code, name, description, 
    parent_id
  </sql>

  <insert id="insertTag" parameterType="com.nero.hua.bean.TagDO" useGeneratedKeys="true" keyProperty="id"  >
    insert into
      tag
      (id, create_time, update_time,
      create_user_id, update_user_id, code, 
      name, description, parent_id
      )
    values (#{tagDO.id}, #{tagDO.createTime}, #{tagDO.updateTime},
      #{tagDO.createUserId}, #{tagDO.updateUserId}, #{tagDO.code},
      #{tagDO.name}, #{tagDO.description}, #{tagDO.parentId}
      )
  </insert>

  <delete id="deleteById" parameterType="java.lang.Long">
    delete
    from
      tag
    where
      id = #{id}
  </delete>

  <update id="updateById" parameterType="com.nero.hua.bean.TagDO">
    update
      tag
    <set>
      <if test="tagDO.updateUserId != null">
        update_user_id = #{tagDO.updateUserId},
      </if>
      <if test="tagDO.updateTime != null">
        update_time = #{tagDO.updateTime},
      </if>
      <if test="tagDO.code != null">
        code = #{tagDO.code},
      </if>
      <if test="tagDO.name != null">
        name = #{tagDO.name},
      </if>
      <if test="tagDO.description != null">
        description = #{tagDO.description},
      </if>
      <if test="tagDO.parentId != null" >
        parent_id = #{tagDO.parentId},
      </if>
    </set>
    where
      id = #{tagDO.id}
  </update>

  <select id="selectById" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select
      <include refid="Base_Column_List" />
    from
      tag
    where
      id = #{id}
  </select>

  <select id="selectCountByPage" resultType="java.lang.Long">
    select
      count(1)
    from
      tag
    where
      <include refid="page_common_condition" />
    order by
      create_time
    desc
  </select>

  <sql id="page_common_condition">
    1 = 1
    <if test="tagPageRequest.keyword != null">
      and (code like concat('%', #{tagPageRequest.keyword}, '%') or name like concat('%', #{tagPageRequest.keyword}, '%') or description like concat('%', #{tagPageRequest.keyword}, '%'))
    </if>
    <if test="tagPageRequest.codeLike != null">
      and code like concat('%', #{tagPageRequest.codeLike}, '%')
    </if>
    <if test="tagPageRequest.codeEqual != null">
      and code = #{tagPageRequest.codeEqual}
    </if>
    <if test="tagPageRequest.nameLike != null">
      and name like concat('%', #{tagPageRequest.nameLike}, '%')
    </if>
    <if test="tagPageRequest.nameEqual != null">
      and name = #{tagPageRequest.nameEqual}
    </if>
    <if test="tagPageRequest.parentId != null">
      and parent_id = #{tagPageRequest.parentId}
    </if>
  </sql>

  <select id="selectListByPage" resultMap="BaseResultMap">
    select
      <include refid="Base_Column_List" />
    from
      tag
    where
      <include refid="page_common_condition" />
    order by
      create_time
    desc
    limit
      #{begin}, #{tagPageRequest.pageSize}
  </select>

</mapper>
