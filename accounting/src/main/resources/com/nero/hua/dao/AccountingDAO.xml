<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.nero.hua.dao.AccountingDAO">

  <resultMap id="BaseResultMap" type="com.nero.hua.bean.AccountingDO">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="create_user_id" jdbcType="BIGINT" property="createUserId" />
    <result column="update_user_id" jdbcType="BIGINT" property="updateUserId" />
    <result column="user_id" jdbcType="BIGINT" property="userId" />
    <result column="bill_create_time" jdbcType="TIMESTAMP" property="billCreateTime" />
    <result column="bill_money" jdbcType="DOUBLE" property="billMoney" />
    <result column="description" jdbcType="VARCHAR" property="description" />
    <result column="review_description" jdbcType="VARCHAR" property="reviewDescription" />
    <result column="valuable" jdbcType="BIT" property="valuable" />
  </resultMap>

  <sql id="Base_Column_List">
    id, create_time, update_time, create_user_id, update_user_id, user_id, bill_create_time, 
    bill_money, description, review_description, valuable
  </sql>

  <insert id="insertAccounting" parameterType="com.nero.hua.bean.AccountingDO" useGeneratedKeys="true" keyProperty="id">
    insert into
      accounting
      (id, create_time, update_time,
      create_user_id, update_user_id, user_id, 
      bill_create_time, bill_money, description, 
      review_description, valuable)
    values
      (#{accountingDO.id}, #{accountingDO.createTime}, #{accountingDO.updateTime},
      #{accountingDO.createUserId}, #{accountingDO.updateUserId}, #{accountingDO.userId},
      #{accountingDO.billCreateTime}, #{accountingDO.billMoney}, #{accountingDO.description},
      #{accountingDO.reviewDescription}, #{accountingDO.valuable})
  </insert>

  <delete id="deleteById">
    delete from
      accounting
    where
      id = #{id}
  </delete>

  <update id="updateById" parameterType="com.nero.hua.bean.AccountingDO">
    update
      accounting
    <set>
      <if test="accountingDO.updateUserId != null">
        update_user_id = #{accountingDO.updateUserId},
      </if>
      <if test="accountingDO.updateTime != null">
        update_time = #{accountingDO.updateTime},
      </if>
      <if test="accountingDO.billCreateTime != null">
        bill_create_time = #{accountingDO.billCreateTime},
      </if>
      <if test="accountingDO.billMoney != null">
        bill_money = #{accountingDO.billMoney},
      </if>
      <if test="accountingDO.description != null">
        description = #{accountingDO.description},
      </if>
      <if test="accountingDO.reviewDescription != null">
        review_description = #{accountingDO.reviewDescription},
      </if>
      <if test="accountingDO.valuable != null" >
        valuable = #{accountingDO.valuable},
      </if>
    </set>
    where
      id = #{accountingDO.id}
  </update>

  <select id="selectById" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select
      <include refid="Base_Column_List" />
    from
      accounting
    where
      id = #{id}
  </select>

  <select id="selectCountByPage" resultType="java.lang.Long">
    select
      count(1)
    from
      accounting
    where
      <include refid="page_common_condition" />
    order by
      create_time
    desc
  </select>

  <sql id="page_common_condition">
    1 = 1
    <if test="accountingPageRequest.keyword != null">
      and (review_description like concat('%', #{accountingPageRequest.keyword}, '%') or description like concat('%', #{accountingPageRequest.keyword}, '%'))
    </if>
    <if test="accountingPageRequest.billCreateTimeMin != null">
      <![CDATA[
        and bill_create_time >= #{accountingPageRequest.billCreateTimeMin}
      ]]>
    </if>
    <if test="accountingPageRequest.billCreateTimeMax != null">
      <![CDATA[
        and bill_create_time <= #{accountingPageRequest.billCreateTimeMax}
      ]]>
    </if>
    <if test="accountingPageRequest.billMoneyMin != null">
      <![CDATA[
        and bill_money >= #{accountingPageRequest.billMoneyMin}
      ]]>
    </if>
    <if test="accountingPageRequest.billMoneyMax != null">
      <![CDATA[
        and bill_money <= #{accountingPageRequest.billMoneyMax}
      ]]>
    </if>
    <if test="accountingPageRequest.valuable != null">
      <![CDATA[
        and valuable = #{accountingPageRequest.valuable}
      ]]>
    </if>
  </sql>

  <select id="selectListByPage" resultMap="BaseResultMap">
    select
      <include refid="Base_Column_List" />
    from
      accounting
    where
      <include refid="page_common_condition" />
    order by
      create_time
    desc
    limit
      #{begin}, #{accountingPageRequest.pageSize}
  </select>

</mapper>
